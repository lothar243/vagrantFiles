# to be able to configure hyper-v vm.
#ENV['VAGRANT_EXPERIMENTAL'] = 'typed_triggers'

$domain = "missoula.com"
$domain_ip_address = "192.168.56.2"

Vagrant.configure("2") do |config|
    config.vm.box = "gusztavvargadr/windows-server"
    config.vm.define "windows-domain-controller"
    config.vm.hostname = "dc"

    # use the plaintext WinRM transport and force it to use basic authentication.
    # NB this is needed because the default negotiate transport stops working
    #    after the domain controller is installed.
    #    see https://groups.google.com/forum/#!topic/vagrant-up/sZantuCM0q4
    config.winrm.transport = :plaintext
    config.winrm.basic_auth_only = true


    config.vm.network "private_network",
        ip: $domain_ip_address
#libvirt__forward_mode: "route",
#        libvirt__dhcp_enabled: false,
#        hyperv__bridge: "windows-domain-controller"

    config.vm.provision "shell", path: "provision/ps.ps1", args: ["configure-hyperv-guest.ps1", $domain_ip_address]
    config.vm.provision "shell", path: "provision/ps.ps1", args: ["domain-controller.ps1", $domain]
    config.vm.provision "shell", reboot: true
    config.vm.provision "shell", path: "provision/ps.ps1", args: "domain-controller-wait-for-ready.ps1"
    config.vm.provision "shell", path: "provision/ps.ps1", args: "set-vagrant-domain-admin.ps1"
    config.vm.provision "shell", path: "provision/ps.ps1", args: "domain-controller-configure.ps1"
    config.vm.provision "shell", inline: "$env:chocolateyVersion='0.12.1'; iwr https://chocolatey.org/install.ps1 -UseBasicParsing | iex", name: "Install Chocolatey"
    config.vm.provision "shell", path: "provision/ps.ps1", args: "provision-base.ps1"
    config.vm.provision "shell", reboot: true
    config.vm.provision "shell", path: "provision/ps.ps1", args: "domain-controller-wait-for-ready.ps1"
    # TODO after https://github.com/FriedrichWeinmann/GPOTools/issues/5#issuecomment-781598022 is fixed use ps.ps1 to call provision-gpos.ps1.
    config.vm.provision "shell", inline: "cd c:/vagrant/provision; ./provision-gpos.ps1"
    config.vm.provision "shell", path: "provision/ps.ps1", args: "ad-explorer.ps1"
    #config.vm.provision "shell", path: "provision/ps.ps1", args: "ca.ps1"
    config.vm.provision "shell", reboot: true
    #config.vm.provision "shell", path: "provision/ps.ps1", args: "provision-winrm-https-listener.ps1"
    #config.vm.provision "shell", path: "provision/ps.ps1", args: "provision-msys2.ps1"
    #config.vm.provision "shell", path: "provision/ps.ps1", args: "provision-firewall.ps1"
    config.vm.provision "shell", path: "provision/ps.ps1", args: "summary.ps1"
end
